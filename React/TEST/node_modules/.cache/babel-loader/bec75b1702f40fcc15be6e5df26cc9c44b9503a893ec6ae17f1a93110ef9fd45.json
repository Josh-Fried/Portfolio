{"ast":null,"code":"var _jsxFileName = \"/Users/joshfried/Downloads/Projects/React Apps/TicTacToe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null).map(() => Array(9).fill(null)));\n  const [bigboard, setBigBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [start, setStart] = useState(true);\n  const winner = calculateBigWinner(bigboard);\n  const [playBoard, setPlayBoard] = useState(0);\n  const [boardchose, setBoardChose] = useState(false);\n  const handleClick = (index, i) => {\n    // Log the values of i and index\n    console.log('i:', i, 'index:', index);\n\n    // if (winner && board[index][i] != null) return;\n\n    board[index][i] = xIsNext ? 'X' : 'O';\n    console.log(\"Next: \", xIsNext ? 'X' : 'O');\n    setXIsNext(!xIsNext);\n  };\n  const handleBigClick = i => {\n    // needs to dim the other squares and only let the player play on the right square\n  };\n  const renderBigSquare = i => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: Array(3).fill(null).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array(3).fill(null).map((_, col) => renderSquare(i, row * 3 + col))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n  const renderSquare = (index, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(index, i),\n    children: board[index][i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n  const handleReset = () => {\n    // setBoard(Array(9).fill(null));\n    //setBoard(Array(9).fill(Array(9).fill(null)));\n    setBoard(Array(9).fill(null).map(() => Array(9).fill(null)));\n    setXIsNext(true);\n    setStart(true);\n  };\n  const renderBigBoard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-bigboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Array(3).fill(null).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: Array(3).fill(null).map((_, col) => renderBigSquare(row * 3 + col))\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"replay-button\",\n          onClick: handleReset,\n          children: \"Reset Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  const chooseBoard = () => {\n    //dim other boards and then pick new board.\n    setBoardChose(true);\n  };\n  const startGame = () => {\n    if (start) {\n      console.log(\"Start\", status);\n      status = \"Choose a Board\";\n      console.log(\"Start\", status);\n      while (!boardchose) {\n        chooseBoard();\n      }\n      setStart(false);\n    }\n  };\n  let status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? 'X' : 'O'}`;\n  console.log(board);\n  console.log(bigboard);\n  if (start) {\n    status = \"Choose a Board\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [startGame(), renderBigBoard()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kt+gWCJHDkT0CPQCfyTqpH9nAsI=\");\n_c = App;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nfunction calculateBigWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","map","bigboard","setBigBoard","xIsNext","setXIsNext","start","setStart","winner","calculateBigWinner","playBoard","setPlayBoard","boardchose","setBoardChose","handleClick","index","i","console","log","handleBigClick","renderBigSquare","className","children","_","row","col","renderSquare","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleReset","renderBigBoard","status","chooseBoard","startGame","_c","calculateWinner","squares","lines","length","a","b","c","$RefreshReg$"],"sources":["/Users/joshfried/Downloads/Projects/React Apps/TicTacToe/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(null).map(() => Array(9).fill(null)));\n  const [bigboard, setBigBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [start, setStart] = useState(true);\n  const winner = calculateBigWinner(bigboard);\n  const [playBoard, setPlayBoard] = useState(0);\n  const [boardchose, setBoardChose] = useState(false);\n\n  const handleClick = (index, i) => {\n    // Log the values of i and index\n    console.log('i:', i, 'index:', index);\n  \n    // if (winner && board[index][i] != null) return;\n  \n    board[index][i] = xIsNext ? 'X' : 'O';\n    console.log(\"Next: \", xIsNext ? 'X' : 'O');\n    setXIsNext(!xIsNext);\n  };\n\n  const handleBigClick = (i) => {\n    // needs to dim the other squares and only let the player play on the right square\n    \n  };\n\n  const renderBigSquare = (i) => (\n    <div className=\"board\">\n      {Array(3)\n        .fill(null)\n        .map((_, row) => (\n          <div key={row} className=\"board-row\">\n            {Array(3)\n              .fill(null)\n              .map((_, col) => renderSquare(i, row * 3 + col))}\n          </div>\n        ))}\n      </div>\n  );\n\n  const renderSquare = (index, i) => (\n    <button className=\"square\" onClick={() => handleClick(index, i)}>\n      {board[index][i]}\n    </button>\n  );\n\n  const handleReset = () => {\n    // setBoard(Array(9).fill(null));\n    //setBoard(Array(9).fill(Array(9).fill(null)));\n    setBoard(Array(9).fill(null).map(() => Array(9).fill(null)));\n    setXIsNext(true);\n    setStart(true);\n  };\n\n  const renderBigBoard = () => (\n    <div className=\"game\">\n      <div className=\"game-bigboard\">\n        <div className=\"status\">{status}</div>\n        <div> \n          {Array(3) \n            .fill(null)\n            .map((_, row) => (\n              <div key={row} className=\"board-row\">\n                {Array(3)\n                  .fill(null)\n                  .map((_, col) => renderBigSquare(row * 3 + col))}\n              </div>\n            ))}\n            <button className=\"replay-button\" onClick={handleReset}>\n              Reset Board\n            </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const chooseBoard = () => {\n    //dim other boards and then pick new board.\n    setBoardChose(true);\n  };\n\n  const startGame = () =>{   \n     if(start){\n      console.log(\"Start\", status);\n      status = \"Choose a Board\";\n      console.log(\"Start\", status);\n      while(!boardchose){\n        chooseBoard();\n      }\n      \n      setStart(false);\n    }\n  };\n\n  let status = winner\n    ? `Winner: ${winner}`\n    : `Next player: ${xIsNext ? 'X' : 'O'}`;\n    console.log(board);\n    console.log(bigboard);\n\n  if (start){\n    status = \"Choose a Board\";\n  }\n\n  return (\n    <div>\n      {startGame()}\n      {renderBigBoard()}\n    </div>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction calculateBigWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}