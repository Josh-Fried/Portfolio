{"ast":null,"code":"var _jsxFileName = \"/Users/joshfried/Downloads/Projects/React Apps/TicTacToe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(Array(9).fill(null)));\n  const [bigboard, setBigBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [start, setStart] = useState(true);\n  const winner = calculateWinner(bigboard);\n  const [playBoard, setPlayBoard] = useState(0);\n  const handleClick = i => {\n    const squares = [...board];\n    if (winner || squares[i]) return;\n    squares[i] = xIsNext ? 'X' : 'O';\n    //board[0][i] = squares[i];\n    setBoard(squares);\n    setXIsNext(!xIsNext);\n  };\n  const handleBigClick = i => {\n    // needs to dim the other squares and only let the player play on the right square\n  };\n  const renderBigSquare = (index, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: Array(3).fill(null).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array(3).fill(null).map((_, col) => renderSquare(index, row * 3 + col))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n  const renderSquare = (index, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(i),\n    children: board[index][i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n  const handleReset = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  const renderBigBoard = () => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-bigboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board\",\n          children: Array(3).fill(null).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-row\",\n            children: Array(3).fill(null).map((_, col) => renderBigSquare(row * 3 + col))\n          }, row, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  };\n  const startGame = () => {\n    if (start) {\n      /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this);\n      setStart(false);\n    }\n  };\n  const status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? 'X' : 'O'}`;\n  console.log(board);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [startGame, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-bigboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Array(3).fill(null).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: Array(3).fill(null).map((_, col) => renderBigSquare(row, row * 3 + col))\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"replay-button\",\n          onClick: handleReset,\n          children: \"Reset Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jCsQc095gC3Dv2yKkJUB5g7YV7g=\");\n_c = App;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","bigboard","setBigBoard","xIsNext","setXIsNext","start","setStart","winner","calculateWinner","playBoard","setPlayBoard","handleClick","i","squares","handleBigClick","renderBigSquare","index","className","children","map","_","row","col","renderSquare","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleReset","renderBigBoard","status","startGame","console","log","_c","lines","length","a","b","c","$RefreshReg$"],"sources":["/Users/joshfried/Downloads/Projects/React Apps/TicTacToe/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(Array(9).fill(null)));\n  const [bigboard, setBigBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [start, setStart] = useState(true);\n  const winner = calculateWinner(bigboard);\n  const [playBoard, setPlayBoard] = useState(0);\n\n  const handleClick = (i) => {\n    const squares = [...board];\n    if (winner || squares[i]) return;\n\n    squares[i] = xIsNext ? 'X' : 'O';\n    //board[0][i] = squares[i];\n    setBoard(squares);\n    setXIsNext(!xIsNext);\n  };\n\n  const handleBigClick = (i) => {\n    // needs to dim the other squares and only let the player play on the right square\n    \n  };\n\n  const renderBigSquare = (index, i) => (\n    <div className=\"board\">\n      {Array(3)\n        .fill(null)\n        .map((_, row) => (\n          <div key={row} className=\"board-row\">\n            {Array(3)\n              .fill(null)\n              .map((_, col) => renderSquare(index, row * 3 + col))}\n          </div>\n        ))}\n      </div>\n  );\n\n  const renderSquare = (index, i) => (\n    <button className=\"square\" onClick={() => handleClick(i)}>\n      {board[index][i]}\n    </button>\n  );\n\n  const handleReset = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  const renderBigBoard = () => {\n    <div className=\"game\">\n    <div className=\"game-bigboard\">\n      <div className=\"status\">{status}</div>\n      <div className=\"board\">\n        {Array(3)\n          .fill(null)\n          .map((_, row) => (\n            <div key={row} className=\"board-row\">\n              {Array(3)\n                .fill(null)\n                .map((_, col) => renderBigSquare(row * 3 + col))}\n            </div>\n          ))}\n      </div>\n    </div>\n  </div>\n  };\n\n  const startGame = () =>{\n    if(start){\n      <div>\n        \n      </div>\n      setStart(false);\n    }\n  }\n\n  const status = winner\n    ? `Winner: ${winner}`\n    : `Next player: ${xIsNext ? 'X' : 'O'}`;\n    console.log(board);\n\n\n  return (\n    <div className=\"game\">\n      {startGame}\n    <div className=\"game-bigboard\">\n      <div className=\"status\">{status}</div>\n      <div> \n        {/* instead just manually do board[0][0] ... board[8][8] */}\n        {Array(3) \n          .fill(null)\n          .map((_, row) => (\n            <div key={row} className=\"board-row\">\n              {Array(3)\n                .fill(null)\n                .map((_, col) => renderBigSquare(row, row * 3 + col))}\n            </div>\n          ))}\n          <button className=\"replay-button\" onClick={handleReset}>\n          Reset Board\n      </button>\n      </div>\n    </div>\n  </div>\n    \n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}